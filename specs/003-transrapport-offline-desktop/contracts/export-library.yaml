openapi: 3.0.3
info:
  title: Export Library Interface
  description: Contract for report generation and data export functionality
  version: 1.0.0
  contact:
    name: TransRapport Team
  license:
    name: CC BY-NC-SA 4.0

components:
  schemas:
    ExportRequest:
      type: object
      required: [sessionId, format, template]
      properties:
        sessionId:
          type: string
          format: uuid
        format:
          type: string
          enum: [pdf, txt, md, json, csv, jsonl]
        template:
          type: string
          enum: [therapy, legal, business, technical, summary, detailed]
        settings:
          $ref: '#/components/schemas/ExportSettings'
        outputPath:
          type: string
          description: Optional custom output path

    ExportSettings:
      type: object
      properties:
        includeAudio:
          type: boolean
          default: false
        includeTranscript:
          type: boolean
          default: true
        includeMarkers:
          type: boolean
          default: true
        includeIndicators:
          type: boolean
          default: true
        includeAnalysis:
          type: boolean
          default: true
        markerTypes:
          type: array
          items:
            type: string
            enum: [ATO, SEM, CLU, MEMA]
          default: [ATO, SEM, CLU, MEMA]
        timeRange:
          $ref: '#/components/schemas/TimeRange'
        confidentialityLevel:
          type: string
          enum: [public, internal, confidential, privileged]
          default: confidential
        customization:
          $ref: '#/components/schemas/ReportCustomization'

    TimeRange:
      type: object
      properties:
        startTime:
          type: number
          minimum: 0
          nullable: true
        endTime:
          type: number
          minimum: 0
          nullable: true

    ReportCustomization:
      type: object
      properties:
        title:
          type: string
        subtitle:
          type: string
        author:
          type: string
        organization:
          type: string
        logoPath:
          type: string
        watermark:
          type: string
        confidentialityNotice:
          type: string
        customSections:
          type: array
          items:
            $ref: '#/components/schemas/CustomSection'

    CustomSection:
      type: object
      required: [title, content]
      properties:
        title:
          type: string
        content:
          type: string
        position:
          type: string
          enum: [header, before_summary, after_analysis, footer]
        format:
          type: string
          enum: [text, markdown, html]

    ExportResult:
      type: object
      required: [id, sessionId, format, template, status, createdAt]
      properties:
        id:
          type: string
          format: uuid
        sessionId:
          type: string
          format: uuid
        format:
          type: string
          enum: [pdf, txt, md, json, csv, jsonl]
        template:
          type: string
        fileName:
          type: string
        filePath:
          type: string
        fileSize:
          type: integer
          minimum: 0
        status:
          type: string
          enum: [generating, ready, failed, expired]
        settings:
          $ref: '#/components/schemas/ExportSettings'
        checksum:
          type: string
        createdAt:
          type: string
          format: date-time
        expiresAt:
          type: string
          format: date-time
        downloadCount:
          type: integer
          minimum: 0
          default: 0

    AnalysisReport:
      type: object
      required: [id, sessionId, reportType, template, summary, statistics, generatedAt, status]
      properties:
        id:
          type: string
          format: uuid
        sessionId:
          type: string
          format: uuid
        reportType:
          type: string
          enum: [summary, detailed, executive, technical]
        template:
          type: string
        generatedAt:
          type: string
          format: date-time
        summary:
          $ref: '#/components/schemas/SessionSummary'
        statistics:
          $ref: '#/components/schemas/SessionStatistics'
        insights:
          type: array
          items:
            $ref: '#/components/schemas/Insight'
        recommendations:
          type: array
          items:
            $ref: '#/components/schemas/Recommendation'
        exportFormats:
          type: array
          items:
            type: string
            enum: [pdf, txt, md, json, csv]
        confidentiality:
          type: string
          enum: [public, internal, confidential, privileged]
        validatedBy:
          type: string
          nullable: true
        validatedAt:
          type: string
          format: date-time
          nullable: true
        version:
          type: integer
          minimum: 1
        status:
          type: string
          enum: [generating, ready, failed, validated]

    SessionSummary:
      type: object
      required: [duration, speakerBreakdown, markerCounts, rapportTrend, overallAssessment]
      properties:
        duration:
          type: number
          minimum: 0
        speakerBreakdown:
          type: array
          items:
            $ref: '#/components/schemas/SpeakerStats'
        markerCounts:
          $ref: '#/components/schemas/MarkerCounts'
        rapportTrend:
          $ref: '#/components/schemas/TrendAnalysis'
        keyMoments:
          type: array
          items:
            $ref: '#/components/schemas/KeyMoment'
        overallAssessment:
          type: string

    SpeakerStats:
      type: object
      required: [speakerId, label, speakingTime, segmentCount, markerCount]
      properties:
        speakerId:
          type: string
        label:
          type: string
        role:
          type: string
          enum: [professional, client, other, unknown]
        speakingTime:
          type: number
          minimum: 0
        speakingPercentage:
          type: number
          minimum: 0
          maximum: 100
        segmentCount:
          type: integer
          minimum: 0
        markerCount:
          type: integer
          minimum: 0
        averageConfidence:
          type: number
          minimum: 0.0
          maximum: 1.0

    MarkerCounts:
      type: object
      properties:
        ATO:
          type: integer
          minimum: 0
        SEM:
          type: integer
          minimum: 0
        CLU:
          type: integer
          minimum: 0
        MEMA:
          type: integer
          minimum: 0
        total:
          type: integer
          minimum: 0

    TrendAnalysis:
      type: object
      required: [direction, confidence, summary]
      properties:
        direction:
          type: string
          enum: [improving, declining, stable, fluctuating]
        confidence:
          type: number
          minimum: 0.0
          maximum: 1.0
        startValue:
          type: number
        endValue:
          type: number
        peakValue:
          type: number
        valleyValue:
          type: number
        summary:
          type: string

    KeyMoment:
      type: object
      required: [timestamp, description, significance]
      properties:
        timestamp:
          type: number
          minimum: 0
        description:
          type: string
        significance:
          type: string
          enum: [low, medium, high, critical]
        markerIds:
          type: array
          items:
            type: string
            format: uuid
        context:
          type: string

    SessionStatistics:
      type: object
      required: [wordCount, averageSegmentLength, speakerTurnRate, transcriptionAccuracy]
      properties:
        wordCount:
          type: integer
          minimum: 0
        averageSegmentLength:
          type: number
          minimum: 0
        speakerTurnRate:
          type: number
          minimum: 0
        silenceDuration:
          type: number
          minimum: 0
        overlapDuration:
          type: number
          minimum: 0
        transcriptionAccuracy:
          type: number
          minimum: 0.0
          maximum: 1.0

    Insight:
      type: object
      required: [id, category, title, description, significance]
      properties:
        id:
          type: string
          format: uuid
        category:
          type: string
          enum: [communication, rapport, dynamics, concerns, strengths]
        title:
          type: string
        description:
          type: string
        evidence:
          type: array
          items:
            type: string
        significance:
          type: string
          enum: [low, medium, high, critical]
        timeReferences:
          type: array
          items:
            type: number

    Recommendation:
      type: object
      required: [id, category, title, description, priority]
      properties:
        id:
          type: string
          format: uuid
        category:
          type: string
          enum: [follow_up, technique, attention, improvement]
        title:
          type: string
        description:
          type: string
        priority:
          type: string
          enum: [low, medium, high, urgent]
        actionable:
          type: boolean
        evidence:
          type: array
          items:
            type: string

    ExportProgress:
      type: object
      required: [status, progress, currentStep]
      properties:
        status:
          type: string
          enum: [pending, generating_report, formatting, finalizing, completed, failed]
        progress:
          type: number
          minimum: 0
          maximum: 100
        currentStep:
          type: string
        timeRemaining:
          type: number
          nullable: true
        error:
          type: string
          nullable: true

    Template:
      type: object
      required: [id, name, category, description]
      properties:
        id:
          type: string
        name:
          type: string
        category:
          type: string
          enum: [therapy, legal, business, technical]
        description:
          type: string
        supportedFormats:
          type: array
          items:
            type: string
            enum: [pdf, txt, md, json, csv]
        customizable:
          type: boolean
        version:
          type: string

    Error:
      type: object
      required: [code, message]
      properties:
        code:
          type: string
        message:
          type: string
        details:
          type: object
        timestamp:
          type: string
          format: date-time

paths:
  /export/start:
    post:
      summary: Start export generation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportRequest'
      responses:
        '202':
          description: Export started
          content:
            application/json:
              schema:
                type: object
                properties:
                  exportId:
                    type: string
                    format: uuid
                  status:
                    $ref: '#/components/schemas/ExportProgress'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /export/status:
    get:
      summary: Get export progress
      parameters:
        - name: exportId
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Export progress
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportProgress'

  /export/result:
    get:
      summary: Get completed export
      parameters:
        - name: exportId
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Export result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportResult'
        '404':
          description: Export not found

  /export/download:
    get:
      summary: Download export file
      parameters:
        - name: exportId
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Export file
          content:
            application/pdf: {}
            text/plain: {}
            text/markdown: {}
            application/json: {}
            text/csv: {}
        '404':
          description: Export file not found

  /reports:
    get:
      summary: List reports for session
      parameters:
        - name: sessionId
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Available reports
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnalysisReport'

  /reports/generate:
    post:
      summary: Generate analysis report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [sessionId, reportType, template]
              properties:
                sessionId:
                  type: string
                  format: uuid
                reportType:
                  type: string
                  enum: [summary, detailed, executive, technical]
                template:
                  type: string
                customization:
                  $ref: '#/components/schemas/ReportCustomization'
      responses:
        '202':
          description: Report generation started
          content:
            application/json:
              schema:
                type: object
                properties:
                  reportId:
                    type: string
                    format: uuid

  /templates:
    get:
      summary: List available export templates
      parameters:
        - name: category
          in: query
          schema:
            type: string
            enum: [therapy, legal, business, technical]
        - name: format
          in: query
          schema:
            type: string
            enum: [pdf, txt, md, json, csv]
      responses:
        '200':
          description: Available templates
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template'

  /templates/preview:
    post:
      summary: Generate template preview
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [templateId, sessionId]
              properties:
                templateId:
                  type: string
                sessionId:
                  type: string
                  format: uuid
                customization:
                  $ref: '#/components/schemas/ReportCustomization'
      responses:
        '200':
          description: Template preview
          content:
            text/html:
              schema:
                type: string
            application/pdf: {}

tags:
  - name: Export
    description: Data export and file generation
  - name: Reports
    description: Analysis report generation
  - name: Templates
    description: Export template management