openapi: 3.0.3
info:
  title: Analysis Library Interface
  description: Contract for LD-3.4 marker analysis and rapport indicator calculations
  version: 1.0.0
  contact:
    name: TransRapport Team
  license:
    name: CC BY-NC-SA 4.0

components:
  schemas:
    AnalysisRequest:
      type: object
      required: [sessionId, transcriptId, settings]
      properties:
        sessionId:
          type: string
          format: uuid
        transcriptId:
          type: string
          format: uuid
        settings:
          $ref: '#/components/schemas/AnalysisSettings'

    AnalysisSettings:
      type: object
      properties:
        enabledMarkerTypes:
          type: array
          items:
            type: string
            enum: [ATO, SEM, CLU, MEMA]
          default: [ATO, SEM, CLU, MEMA]
        confidenceThreshold:
          type: number
          minimum: 0.0
          maximum: 1.0
          default: 0.5
        timeWindowSize:
          type: number
          minimum: 10.0
          default: 60.0
          description: Time window for rapport calculations in seconds
        enableRapportCalculation:
          type: boolean
          default: true
        customRules:
          type: array
          items:
            type: string
          default: []

    MarkerEvent:
      type: object
      required: [id, sessionId, transcriptSegmentId, speakerId, markerType, markerSubtype, confidence, startTime, endTime, text, context, rule, evidence, significance, createdAt]
      properties:
        id:
          type: string
          format: uuid
        sessionId:
          type: string
          format: uuid
        transcriptSegmentId:
          type: string
          format: uuid
        speakerId:
          type: string
        markerType:
          type: string
          enum: [ATO, SEM, CLU, MEMA]
        markerSubtype:
          type: string
        confidence:
          type: number
          minimum: 0.0
          maximum: 1.0
        startTime:
          type: number
          minimum: 0
        endTime:
          type: number
          minimum: 0
        text:
          type: string
        context:
          type: string
        rule:
          type: string
        evidence:
          $ref: '#/components/schemas/MarkerEvidence'
        significance:
          type: string
          enum: [low, medium, high, critical]
        verified:
          type: boolean
          default: false
        notes:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time

    MarkerEvidence:
      type: object
      required: [patterns, keywords, explanation]
      properties:
        patterns:
          type: array
          items:
            type: string
        keywords:
          type: array
          items:
            type: string
        linguisticFeatures:
          type: array
          items:
            type: string
        contextScore:
          type: number
          minimum: 0.0
          maximum: 1.0
        precedingMarkers:
          type: array
          items:
            type: string
        explanation:
          type: string

    RapportIndicator:
      type: object
      required: [id, sessionId, timeWindow, indicatorType, value, scale, trend, confidence, evidenceMarkers, calculation, interpretation, significance, createdAt]
      properties:
        id:
          type: string
          format: uuid
        sessionId:
          type: string
          format: uuid
        timeWindow:
          $ref: '#/components/schemas/TimeWindow'
        indicatorType:
          type: string
          enum: [rapport_level, communication_flow, emotional_tone, engagement_level, resistance, cooperation, trust_building]
        value:
          type: number
        scale:
          $ref: '#/components/schemas/Scale'
        trend:
          type: string
          enum: [improving, declining, stable, fluctuating]
        confidence:
          type: number
          minimum: 0.0
          maximum: 1.0
        evidenceMarkers:
          type: array
          items:
            type: string
            format: uuid
        calculation:
          $ref: '#/components/schemas/CalculationDetails'
        interpretation:
          type: string
        significance:
          type: string
          enum: [low, medium, high, critical]
        validated:
          type: boolean
          default: false
        notes:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time

    TimeWindow:
      type: object
      required: [startTime, endTime, duration]
      properties:
        startTime:
          type: number
          minimum: 0
        endTime:
          type: number
          minimum: 0
        duration:
          type: number
          minimum: 0

    Scale:
      type: object
      required: [minimum, maximum, unit, interpretation]
      properties:
        minimum:
          type: number
        maximum:
          type: number
        unit:
          type: string
        interpretation:
          type: string

    CalculationDetails:
      type: object
      required: [algorithm, parameters]
      properties:
        algorithm:
          type: string
        parameters:
          type: object
        weightings:
          type: object
        baseline:
          type: number
          nullable: true

    AnalysisProgress:
      type: object
      required: [status, progress, currentStage]
      properties:
        status:
          type: string
          enum: [pending, loading_rules, analyzing_segments, calculating_rapport, completed, failed]
        progress:
          type: number
          minimum: 0
          maximum: 100
        currentStage:
          type: string
        processedSegments:
          type: integer
          minimum: 0
        totalSegments:
          type: integer
          minimum: 0
        markersFound:
          type: integer
          minimum: 0
        indicatorsCalculated:
          type: integer
          minimum: 0
        timeRemaining:
          type: number
          nullable: true
        error:
          type: string
          nullable: true

    AnalysisResults:
      type: object
      required: [sessionId, markers, indicators, summary, completedAt]
      properties:
        sessionId:
          type: string
          format: uuid
        markers:
          type: array
          items:
            $ref: '#/components/schemas/MarkerEvent'
        indicators:
          type: array
          items:
            $ref: '#/components/schemas/RapportIndicator'
        summary:
          $ref: '#/components/schemas/AnalysisSummary'
        completedAt:
          type: string
          format: date-time

    AnalysisSummary:
      type: object
      required: [totalMarkers, markersByType, averageRapport, trendAnalysis]
      properties:
        totalMarkers:
          type: integer
          minimum: 0
        markersByType:
          type: object
          properties:
            ATO:
              type: integer
            SEM:
              type: integer
            CLU:
              type: integer
            MEMA:
              type: integer
        averageRapport:
          type: number
        rapportRange:
          type: object
          properties:
            minimum:
              type: number
            maximum:
              type: number
        trendAnalysis:
          type: string
        significantMoments:
          type: array
          items:
            type: object
            properties:
              timestamp:
                type: number
              description:
                type: string
              significance:
                type: string

    MarkerValidation:
      type: object
      required: [markerId, verified, confidence]
      properties:
        markerId:
          type: string
          format: uuid
        verified:
          type: boolean
        confidence:
          type: number
          minimum: 0.0
          maximum: 1.0
        notes:
          type: string
          nullable: true
        validatedBy:
          type: string
        validatedAt:
          type: string
          format: date-time

    Error:
      type: object
      required: [code, message]
      properties:
        code:
          type: string
        message:
          type: string
        details:
          type: object
        timestamp:
          type: string
          format: date-time

paths:
  /analysis/start:
    post:
      summary: Start LD-3.4 marker analysis
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalysisRequest'
      responses:
        '202':
          description: Analysis started
          content:
            application/json:
              schema:
                type: object
                properties:
                  analysisId:
                    type: string
                    format: uuid
                  status:
                    $ref: '#/components/schemas/AnalysisProgress'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /analysis/status:
    get:
      summary: Get analysis progress
      parameters:
        - name: analysisId
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Analysis progress
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisProgress'

  /analysis/results:
    get:
      summary: Get completed analysis results
      parameters:
        - name: sessionId
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Analysis results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisResults'
        '404':
          description: Analysis not found

  /markers:
    get:
      summary: Get markers for session
      parameters:
        - name: sessionId
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: markerType
          in: query
          schema:
            type: string
            enum: [ATO, SEM, CLU, MEMA]
        - name: speakerId
          in: query
          schema:
            type: string
        - name: minConfidence
          in: query
          schema:
            type: number
            minimum: 0.0
            maximum: 1.0
      responses:
        '200':
          description: Marker events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MarkerEvent'

  /markers/validate:
    post:
      summary: Validate marker detection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkerValidation'
      responses:
        '200':
          description: Marker validated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarkerEvent'

  /indicators:
    get:
      summary: Get rapport indicators for session
      parameters:
        - name: sessionId
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: indicatorType
          in: query
          schema:
            type: string
            enum: [rapport_level, communication_flow, emotional_tone, engagement_level, resistance, cooperation, trust_building]
        - name: timeWindow
          in: query
          schema:
            type: string
            description: ISO 8601 time range or window size
      responses:
        '200':
          description: Rapport indicators
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RapportIndicator'

  /indicators/recalculate:
    post:
      summary: Recalculate rapport indicators
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [sessionId]
              properties:
                sessionId:
                  type: string
                  format: uuid
                timeWindow:
                  $ref: '#/components/schemas/TimeWindow'
                indicatorTypes:
                  type: array
                  items:
                    type: string
                    enum: [rapport_level, communication_flow, emotional_tone, engagement_level, resistance, cooperation, trust_building]
      responses:
        '202':
          description: Recalculation started
          content:
            application/json:
              schema:
                type: object
                properties:
                  calculationId:
                    type: string
                    format: uuid

  /rules/available:
    get:
      summary: List available analysis rules
      responses:
        '200':
          description: Available rules
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    markerType:
                      type: string
                      enum: [ATO, SEM, CLU, MEMA]
                    description:
                      type: string
                    enabled:
                      type: boolean
                    version:
                      type: string

  /rules/update:
    post:
      summary: Update rule configuration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ruleId, enabled]
              properties:
                ruleId:
                  type: string
                enabled:
                  type: boolean
                parameters:
                  type: object
      responses:
        '200':
          description: Rule updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

tags:
  - name: Analysis
    description: LD-3.4 marker analysis operations
  - name: Markers
    description: Marker event management and validation
  - name: Indicators
    description: Rapport indicator calculations
  - name: Rules
    description: Analysis rule configuration